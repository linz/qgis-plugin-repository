service: linz-qgis-s3-plugin-repo

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-apigw-binary

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: ap-southeast-2
  environment:
    REPO_BUCKET_NAME: "qgis-plugin-repository"
    PLUGINS_TABLE_NAME: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PLUGINS_TABLE_NAME}"

custom:
  pythonRequirements:
   usePoetry: false
   noDeploy:
      - boto3
      - botocore
  apigwBinary:
    types:
      - application/octet-stream
      - application/zip
  wsgi:
    app: src/plugin/api.app
    textMimeTypes:
      - application/octet-stream
      - application/zip

package:
  exclude:
    - ./.venv/**

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    # Configure Repo Bucket Ploicy
    RepoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.REPO_BUCKET_NAME}
        AccessControl: PublicReadWrite
    RepoBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref RepoBucket
        PolicyDocument:
          Id: RepoBucketPolicy
          Version: '2012-10-17'
          Statement:
            - Sid: PublicGetObjListBucket
              Effect: Allow
              Principal: '*'
              Action:
                - "s3:GetObject"
                - "s3:ListBucket"
              Resource:
                - Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - "Ref" : "RepoBucket"
                    - '/*'
                - Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - "Ref" : "RepoBucket"
    PluginsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.PLUGINS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: item_version
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: item_version
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
