name: Test

on:
  pull_request:

jobs:
  test:
    concurrency:
      group: ${{ github.workflow }} # https://github.com/serverless/serverless/issues/9813 :(
    runs-on: ubuntu-22.04
    env:
      RESOURCE_SUFFIX: continuousdeployment
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Enable gitlint to check all branch commit messages

      - name: Get Python version
        run: echo "PYTHON_VERSION=$(cat .python-version)" >> "$GITHUB_ENV"

      - name: Use Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3.2.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('./poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install Poetry
        run: pip install poetry

      - name: Install Python dependencies
        run: poetry install --no-root

      - name: Lint and format files
        run: poetry run pre-commit run --all-files

      - name: Lint commit messages
        run: poetry run gitlint --commits=origin/${{ github.base_ref }}..${{ github.event.pull_request.head.sha }} --debug --fail-without-commits
        if: ${{ github.event_name == 'pull_request' }}

      - name: Coverage
        run: poetry run pytest --cov src tests/unit tests/integration

      # Deploy to dev on merge to master
      - name: Configure AWS Dev Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}

      - name: Get Node.js version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> "$GITHUB_ENV"

      - name: Install Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js packages
        uses: actions/cache@v3.2.6
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-

      - name: install serverless
        run: npm install

      - name: deploy app
        run: npx serverless deploy --stage=dev --param="resource-suffix=${RESOURCE_SUFFIX}"

      - name: get deployment url
        run: echo BASE_URL=$(npx serverless info --stage=dev | grep -o 'https.*\/dev\/') >> "$GITHUB_ENV"

      - name: Test (sys)
        run: BASE_URL=${{ env.BASE_URL }} poetry run pytest tests/sys/

      - name: Tear down environment
        uses: nick-fields/retry@v2.8.3
        with:
          command: npx serverless remove --stage=dev --param="resource-suffix=${RESOURCE_SUFFIX}"
          max_attempts: 6
          retry_wait_seconds: 30
          timeout_minutes: 5
        if: always()
