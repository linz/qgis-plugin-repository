---
name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Use Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Format
        run: |
          black src/ --check --diff
          black tests/ --check --diff

      - name: Lint
        run: |
          pylint src/
          pylint tests/

      - name: Test
        run: python -m pytest

      - name: Coverage
        run: |
          pytest --cov


  deploy:
    name: deploy
    if: contains(github.ref, 'refs/tags/')
    #needs: [Format, Lint, Test]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v2-beta
        with:
          ref: ${{ github.ref }}

      - name: Use Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Build project
        run: |
          echo ${{ github.repository }}
          zip -r qgis-plugin-repository.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            See [${CHANGELOG} ${{ github.ref }}](https://github.com/linz/qgis-plugin-repository/blob/master/${CHANGELOG}#$(echo ${{ github.ref }} | sed -e 's/[a-zA-Z\.]//g')) for detailed release information.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./qgis-plugin-repository.zip
          asset_name: qgis-plugin-repository
          asset_content_type: application/zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Identity Check
        run: aws sts get-caller-identity

      - name: Install npm
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: https://registry.npmjs.org

      - name: install serverless
        run: npm install package.json

      # - name: install serverless
      #   run: npm install -g serverless

      # - name: install serverless plugin - serverless-plugin-git-variables
      #   run: sls plugin install -n serverless-plugin-git-variables@4.0.0

      # - name: install serverless plugin - serverless-wsgi
      #   run: sls plugin install -n serverless-wsgi

      # - name: install serverless plugin - serverless-python-requirements
      #   run: sls plugin install -n serverless-python-requirements

      # - name: install serverless plugin - serverless-apigw-binary
      #   run: sls plugin install -n serverless-apigw-binary

      - name: deploy app
        run: serverless deploy --stage dev --resource-suffix ${{ secrets.DEPLOYMENT_SUFFIX }}
