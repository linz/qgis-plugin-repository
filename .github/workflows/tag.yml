---
name: deploy

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+
    - v[0-9]+.[0-9]+.[0-9]+\-dev

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v2-beta
        with:
          ref: ${{ github.ref }}

      - name: Use Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Echo github.ref
        run: |
          echo ${{ github.ref }}

      # - name: Set dev environment vars
      #   if: endsWith(github.ref, 'dev')
      #   run: |
      #     echo "::set-env name=DEPLOYMENT_SUFFIX::${{  secrets.DEPLOYMENT_SUFFIX_DEV  }}"
      #     echo "::set-env name=AWS_ROLE_TO_ASSUME::${{  secrets.AWS_ROLE_TO_ASSUME_DEV  }}"
      #     echo "::set-env name=STAGE::dev"

      # - name: Set prd environment vars
      #   if: "!endsWith(github.ref, 'dev')"
      #   run: |
      #     echo "::set-env name=DEPLOYMENT_SUFFIX::${{  secrets.DEPLOYMENT_SUFFIX_PRD  }}"
      #     echo "::set-env name=AWS_ROLE_TO_ASSUME::${{  secrets.AWS_ROLE_TO_ASSUME_PRD  }}"
      #     echo "::set-env name=STAGE::prd"

      - name: Build project
        run: |
          echo ${{ github.repository }}
          zip -r qgis-plugin-repository.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            See [${CHANGELOG} ${{ github.ref }}](https://github.com/linz/qgis-plugin-repository/tree/${CHANGELOG}#$(echo ${{ github.ref }} | sed -e 's/[a-zA-Z\.]//g')) for detailed release information.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./qgis-plugin-repository.zip
          asset_name: qgis-plugin-repository
          asset_content_type: application/zip

      # Assume Dev Role
      - name: Configure AWS Credentials
        if: endsWith(github.ref, 'dev')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-to-assume: ${{  secrets.AWS_ROLE_TO_ASSUME_DEV  }}

      # Assume Dev Prd
      - name: Configure AWS Credentials
        if: "!endsWith(github.ref, 'dev')"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-to-assume: ${{  secrets.AWS_ROLE_TO_ASSUME_PRD  }}

      - name: Identity Check
        run: aws sts get-caller-identity

      - name: Install npm
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: https://registry.npmjs.org


      - name: install serverless
        run: npm install

      # Deploy dev
      - name: deploy app
        if: endsWith(github.ref, 'dev')
        run: npx serverless deploy --stage ${STAGE} --resource-suffix ${DEPLOYMENT_SUFFIX}

      # Deploy Prd
      - name: deploy app
        if: "!endsWith(github.ref, 'dev')"
        run: npx serverless deploy --stage ${STAGE} --resource-suffix ${DEPLOYME